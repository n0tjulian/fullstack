{"version":3,"sources":["services/people.js","components/phoneBookComponents.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","id","put","delete","Form","newNameValue","updateInputFieldFunction","newNumberValue","updateNumberFieldFunction","addPersonFunction","onSubmit","value","onChange","type","Filter","searchFilter","filterFunction","Numbers","props","people","map","person","deletePerson","Person","name","number","onClick","Notification","message","positive","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","errorMessage","setErrorMessage","successMessage","setSuccessMessage","useEffect","peopleService","retrievedPeople","resultsToShow","filter","toLowerCase","includes","event","preventDefault","target","some","foundPerson","alert","setTimeout","newPersonsList","catch","error","returnedPerson","concat","find","found","parseInt","newPersonArray","ReactDOM","render","document","getElementById"],"mappings":"mMAEMA,EAAU,eAsBD,EApBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAAQM,GACpBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVA,SAACG,EAAGF,GAEf,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAKF,GAC9BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALM,SAACG,GAElB,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCpBvCM,EAAO,SAAC,GAAwG,IAAvGC,EAAsG,EAAtGA,aAAaC,EAAyF,EAAzFA,yBAAyBC,EAAgE,EAAhEA,eAAeC,EAAiD,EAAjDA,0BAA0BC,EAAuB,EAAvBA,kBAC1F,OACE,uBAAMC,SAAUD,EAAhB,UACA,kDACA,yCACQ,uBAAOE,MAAON,EAAcO,SAAUN,OAE9C,2CACU,uBAAOK,MAAOJ,EAAgBK,SAAUJ,OAElD,8BACE,wBAAQK,KAAK,SAAb,uBAMAC,EAAS,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,aAAaC,EAAoB,EAApBA,eAC5B,OACE,8BACE,uBAAOL,MAAOI,EAAcH,SAAUI,OAKtCC,EAAU,SAACC,GACf,OACE,gCACE,yCAGCA,EAAMC,OAAOC,KAAI,SAACC,GAAD,OAAY,cAAC,EAAD,CAAwBA,OAAQA,EAAQC,aAAcJ,EAAMI,cAA/CD,EAAOpB,WAMlDsB,EAAS,SAAC,GAA2B,IAA1BF,EAAyB,EAAzBA,OAAOC,EAAkB,EAAlBA,aACtB,OACE,8BACE,8BAAID,EAAOG,KAAX,IAAkBH,EAAOI,OAAzB,IAAiC,wBAAQd,MAAOU,EAAOpB,GAAIyB,QAASJ,EAAnC,0BAKjCK,EAAe,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,SAC7B,OAAa,OAAVD,EACQ,KAERC,EAEK,qBAAKC,UAAU,UAAf,SACKF,IAKL,qBAAKE,UAAU,QAAf,SACKF,KCwFFG,EA/IH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAERC,EAFQ,KAECC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGRG,EAHQ,KAGCC,EAHD,OAIiBJ,mBAAS,IAJ1B,mBAITK,EAJS,KAICC,EAJD,OAKiBN,mBAAS,IAL1B,mBAKTO,EALS,KAKCC,EALD,OAMuBR,mBAAS,MANhC,mBAMTS,EANS,KAMIC,EANJ,OAO2BV,mBAAS,MAPpC,mBAOTW,EAPS,KAOMC,EAPN,KAShBC,qBAAU,WACRC,IAAuBlD,MAAK,SAAAmD,GAC1Bb,EAAWa,QAEb,IAGF,IA6GMC,EAPWf,EAAQgB,QAAO,SAAC5B,GAC7B,OAAOA,EAAOG,KAAK0B,cAAcC,SAASZ,EAAUW,kBAQxD,OACE,gCACE,2CACA,cAAC,EAAD,CAActB,QAASa,EAAcZ,UAAU,IAC/C,cAAC,EAAD,CAAcD,QAASe,EAAgBd,UAAU,IAEjD,cAAC,EAAD,CAAQd,aAAcwB,EAAWvB,eA7CX,SAACoC,GACzBA,EAAMC,iBACNb,EAAaY,EAAME,OAAO3C,UA6CxB,cAAC,EAAD,CAAMN,aAAc8B,EAAS7B,yBAzDR,SAAC8C,GACxBA,EAAMC,iBACNjB,EAAWgB,EAAME,OAAO3C,QAwDpBJ,eAAgB8B,EAAW7B,0BArDP,SAAC4C,GACzBA,EAAMC,iBACNf,EAAac,EAAME,OAAO3C,QAmDmDF,kBAxH7D,SAAC2C,GAEjBA,EAAMC,iBACN,IAEItD,EAAY,CACdyB,KAAKW,EACLV,OAAOY,GAIT,GADyBJ,EAAQsB,MAPX,SAAClC,GAAD,OAAYA,EAAOG,OAASW,KAuB7C,CAEH,IAAMqB,EAAcvB,EAAQgB,QAAO,SAAA5B,GAAM,OAAIA,EAAOG,OAASW,KAC7DsB,MAAM,GAAD,OAAItB,EAAJ,wEAELW,EAAqBU,EAAY,GAAGvD,GAAGF,GAAWH,MAAK,SAAAC,GACnD+C,EAAkB,GAAD,OAAIT,EAAJ,+BACjBuB,YAAW,WACTd,EAAkB,QAClB,KAEF,IAAMe,EAAiB1B,EAAQb,KAAI,SAAAC,GAIjC,OAHGA,EAAOpB,KAAOuD,EAAY,GAAGvD,KAC9BoB,EAAM,2BAAOtB,GAAP,IAAiBE,GAAGuD,EAAY,GAAGvD,MAEpCoB,KAGTa,EAAWyB,GACXvB,EAAW,IACXE,EAAa,OAEZsB,OAAM,SAAAC,GACPnB,EAAgB,GAAD,OAAIP,EAAJ,sCACfuB,YAAY,WACVhB,EAAgB,QAChB,KACF,IAAMiB,EAAiB1B,EAAQgB,QAAO,SAAA5B,GAAM,OAAIA,EAAOG,OAASW,KAChED,EAAWyB,GACXvB,EAAW,IACXE,EAAa,YA3CjBQ,EAAqB/C,GAAWH,MAAK,SAAAkE,GACnC5B,EAAWD,EAAQ8B,OAAOD,IAC1BlB,EAAkB,GAAD,OAAIkB,EAAetC,KAAnB,iCAEjBkC,YAAW,WACTd,EAAkB,QACjB,KAEHR,EAAW,IACXE,EAAa,UAoGf,cAAC,EAAD,CAASnB,OAAQ6B,EAAe1B,aA7Cf,SAAC8B,GACpB,IAAMI,EAAcvB,EAAQ+B,MAAK,SAAAC,GAC/B,GAAGC,SAASD,EAAMhE,MAAQiE,SAASd,EAAME,OAAO3C,OAC9C,OAAOsD,KAIXR,MAAM,yBAAD,OAA0BD,EAAYhC,OAC3CsB,EAA2BU,EAAYvD,IAAIL,MAAK,SAAAC,GAC9C+C,EAAkB,GAAD,OAAIY,EAAYhC,KAAhB,sBACjBkC,YAAW,WACTd,EAAkB,QAClB,QACDgB,OAAM,SAAAC,GACPnB,EAAgB,uCAChBgB,YAAW,WACThB,EAAgB,QAChB,QAGJ,IAAMyB,EAAiBlC,EAAQgB,QAAO,SAAA5B,GAAM,OAAIA,EAAOpB,KAAMuD,EAAYvD,MACzEiC,EAAWiC,U,MCjHfC,IAASC,OACL,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.c5429116.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl,newPerson)\n    return request.then(response => response.data)\n}\n\nconst update = (id,newPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`,newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default {getAll , create , update, deletePerson }","\nconst Form = ({newNameValue,updateInputFieldFunction,newNumberValue,updateNumberFieldFunction,addPersonFunction}) => {\n    return (\n      <form onSubmit={addPersonFunction}>\n      <h3>Add someone new:</h3>\n      <div>\n        Name: <input value={newNameValue} onChange={updateInputFieldFunction}/>\n      </div>\n      <div>\n        Number: <input value={newNumberValue} onChange={updateNumberFieldFunction}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  \n    )\n  }\n  const Filter = ({searchFilter,filterFunction}) => {\n    return(\n      <div>\n        <input value={searchFilter} onChange={filterFunction}/>\n      </div>\n    )\n  }\n  \n  const Numbers = (props) => {\n    return(\n      <div>\n        <h3>\n          Numbers\n        </h3>\n        {props.people.map((person) => <Person key={person.id} person={person} deletePerson={props.deletePerson}/>)}\n      </div>\n    )\n  \n  }\n  \n  const Person = ({person,deletePerson}) => {\n    return(\n      <div>\n        <p>{person.name} {person.number} <button value={person.id} onClick={deletePerson}>delete</button></p>\n      </div> \n    )\n  }\n\n  const Notification = ({message,positive}) => {\n    if(message===null){\n        return null\n    }\n    if(positive){\n        return(\n            <div className=\"success\">\n                {message}\n            </div>\n        )\n    }else{\n        return(\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n  }\n\n  export {Numbers,Filter,Form,Notification}","import React, { useState, useEffect} from 'react'\nimport peopleService from './services/people'\nimport {Form,Numbers,Filter,Notification} from './components/phoneBookComponents'\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber,setNewNumber] = useState('')\n  const [newSearch,setNewSearch] = useState('')\n  const [errorMessage,setErrorMessage] = useState(null)\n  const [successMessage,setSuccessMessage] = useState(null)\n\n  useEffect(() => {\n    peopleService.getAll().then(retrievedPeople => {\n      setPersons(retrievedPeople)\n    })\n  },[])\n\n\n  const addPerson = (event) => {\n\n    event.preventDefault()\n    const foundFunction = (person) => person.name === newName\n\n    let newPerson = {\n      name:newName,\n      number:newNumber,\n    }\n\n    let foundPersonBoolean = persons.some(foundFunction)\n    if(!foundPersonBoolean){\n\n      peopleService.create(newPerson).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setSuccessMessage(`${returnedPerson.name} has been added successfully`)\n        \n        setTimeout(() => {\n          setSuccessMessage(null)\n        }, 5000)\n        \n        setNewName('')\n        setNewNumber('')\n      }\n      )\n\n    }else{\n\n      const foundPerson = persons.filter(person => person.name === newName)\n      alert(`${newName} is already in the phonebook, would you like to replace the number?`)\n      \n      peopleService.update(foundPerson[0].id,newPerson).then(response => {\n          setSuccessMessage(`${newName}'s number has been changed`)\n          setTimeout(()=>{\n            setSuccessMessage(null)\n          },5000)\n\n          const newPersonsList = persons.map(person => {\n            if(person.id === foundPerson[0].id){\n              person = {...newPerson,id:foundPerson[0].id}\n            }\n            return person\n          })\n          \n          setPersons(newPersonsList)\n          setNewName('')\n          setNewNumber('')\n        \n        }).catch(error => {\n          setErrorMessage(`${newName} has been removed from the server`)\n          setTimeout( () => {\n            setErrorMessage(null)\n          },5000)\n          const newPersonsList = persons.filter(person => person.name !== newName)\n          setPersons(newPersonsList)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n\n  }\n\n  const updateInputField = (event) => {\n    event.preventDefault()\n    setNewName(event.target.value)\n  }\n\n  const updateNumberField = (event) => {\n    event.preventDefault()\n    setNewNumber(event.target.value)\n  }\n\n  const updateSearchField = (event) => {\n    event.preventDefault()\n    setNewSearch(event.target.value)\n  }\n\n  const deletePerson = (event) => {\n    const foundPerson = persons.find(found => {\n      if(parseInt(found.id) === parseInt(event.target.value)){\n        return found\n      }\n    })\n      \n    alert(`do you want to delete ${foundPerson.name}`)\n    peopleService.deletePerson(foundPerson.id).then(response=>{\n      setSuccessMessage(`${foundPerson.name} has been deleted`)\n      setTimeout(() => {\n        setSuccessMessage(null)\n      },5000)\n    }).catch(error => {\n      setErrorMessage(`that entry has already been deleted`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      },5000)\n    })\n\n    const newPersonArray = persons.filter(person => person.id !==foundPerson.id)\n    setPersons(newPersonArray)\n  }\n\n  const calculateSearchResults = () => {\n    const result = persons.filter((person) => {\n      return person.name.toLowerCase().includes(newSearch.toLowerCase())\n    }\n    )\n    return result\n  }\n\n  const resultsToShow = calculateSearchResults()\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} positive={false}/>\n      <Notification message={successMessage} positive={true}/>\n\n      <Filter searchFilter={newSearch} filterFunction={updateSearchField}/>\n      \n      <Form newNameValue={newName} updateInputFieldFunction={updateInputField}\n        newNumberValue={newNumber} updateNumberFieldFunction={updateNumberField} addPersonFunction={addPerson}/>\n      \n      <Numbers people={resultsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}